{"version":3,"sources":["App.js","Component/Login.js","Component/CreateNewTask.js","Component/ViewListTask.js","Component/FilterTask.js","serviceWorker.js","index.js"],"names":["total_task_count","Login","_this$props","this","props","administration","loginUsername","loginPassword","loginUserNameHandleChange","loginPasswordHandleChange","Entrance","react_default","a","createElement","className","type","value","onChange","placeholder","onClick","Component","CreateNewTask","img","userNameHandleChange","username","email","text","emailNandleChange","taskHandleChange","AddTaskToList","imageHandleChange","imageCheck","preView","PreViewTaskToList","window","onload","document","getElementById","files","onchange","reader","FileReader","e","console","log","width","height","src","target","result","readAsDataURL","id","ViewListTask","list","viewTask","EditAdministrationTask","NumberEditTask","AddCompleteTask","SaveEditAdministrationTask","map","element","index","key","bind","style","display","image_path","alt","status","url","sort_field","sort_direction","page","FilterTask","LoadTaskFromServer","count","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","assertThisInitialized","NewStateFilter","loginUserNameHandleChang","loadlistjson","arguments","length","undefined","request","XMLHttpRequest","open","onreadystatechange","readyState","JSON","parse","response","message","tasks","statusText","send","i","complete","setState","event","imageFile","clientWidth","clientHeight","newTask","form","FormData","append","indexStateList","newList","findIndex","elemarray","array","params_string","encodeURIComponent","signature","md5","listSort","Login_Login","CreateNewTask_CreateNewTask","ViewListTask_ViewListTask","FilterTask_FilterTask","self","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kLAWIA,oFCPiBC,mLAEV,IAAAC,EAE6BC,KAAKC,MADpCC,EADEH,EACFG,eAAgBC,EADdJ,EACcI,cAAeC,EAD7BL,EAC6BK,cAAeC,EAD5CN,EAC4CM,0BACpDC,EAFQP,EAERO,0BAA2BC,EAFnBR,EAEmBQ,SAC5B,OACCC,EAAAC,EAAAC,cAAA,WACER,EAAkBM,EAAAC,EAAAC,cAAA,6LACnBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,sCACWH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAQC,MAAOV,EAAeW,SAAUT,EAA2BU,YAAY,6BADtG,2CAEWP,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAQC,MAAOT,EAAeU,SAAUR,EAA2BS,YAAY,yCACrGP,EAAAC,EAAAC,cAAA,UAAQM,QAAST,GAAjB,6CAX8BU,aCAdC,mLAEV,IAKPC,EALOpB,EAGWC,KAAKC,MAFlBmB,EADErB,EACFqB,qBAAsBC,EADpBtB,EACoBsB,SAAUC,EAD9BvB,EAC8BuB,MAAOC,EADrCxB,EACqCwB,KAAOC,EAD5CzB,EAC4CyB,kBACpDC,EAFQ1B,EAER0B,iBAAqCC,GAF7B3B,EAEU4B,kBAFV5B,EAE6B2B,eAAeE,EAF5C7B,EAE4C6B,WAAYC,EAFxD9B,EAEwD8B,QAChEC,EAHQ/B,EAGR+B,kBAwBD,OApBFC,OAAOC,OAAS,WACLC,SAASC,eAAe,YAAYC,MAAM,GAEjCF,SAASC,eAAe,YAE7BE,SAAW,WACnB,IAAIC,EAAS,IAAIC,WACjBD,EAAOL,OAAS,SAASO,IACtBpB,EAAMc,SAASvB,cAAc,QAC1BsB,OAAS,WACXhC,KACAwC,QAAQC,IAAIzC,KAAK0C,MAAM,IAAI1C,KAAK2C,SACjC3C,KAAK0C,MAAM,KAAO1C,KAAK2C,OAAO,OAAM3C,KAAK0C,MAAM,IAAK1C,KAAK2C,OAAO,MAEjExB,EAAIyB,IAAML,EAAEM,OAAOC,QAErBT,EAAOU,cAAc/C,KAAKmC,MAAM,MAKpC3B,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,iFACHF,EAAAC,EAAAC,cAAA,mCACOF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAQC,MAAOQ,EAAUP,SAAUM,EAAsBL,YAAY,6BADxF,IACiGP,EAAAC,EAAAC,cAAA,WADjG,mCAEQF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAASC,MAAOS,EAAOR,SAAUU,EAAoBT,YAAY,mBAFrF,IAEyGP,EAAAC,EAAAC,cAAA,WAFzG,wCAGQF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAQC,MAAOU,EAAMT,SAAUW,EAAmBV,YAAY,+EAHlF,IAGqGP,EAAAC,EAAAC,cAAA,WAHrG,gGAImBF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAQoC,GAAG,aACxCpB,EAAapB,EAAAC,EAAAC,cAAA,gBACbF,EAAAC,EAAAC,cAAA,0TAINmB,EAAUrB,EAAAC,EAAAC,cAAA,WACTW,EADS,WACSC,EADT,WACwBC,EAClCf,EAAAC,EAAAC,cAAA,UAAQM,QAASU,GAAjB,kGAEClB,EAAAC,EAAAC,cAAA,UAAQM,QAASc,GAAjB,wJAhDyCb,aCAtBgC,mLAEV,IAAAlD,EAIuCC,KAAKC,MAH7CsB,EADCxB,EACDwB,KAAO2B,EADNnD,EACMmD,KAAMC,EADZpD,EACYoD,SACsB1B,GAFlC1B,EAENqB,qBAFMrB,EAEgByB,kBAFhBzB,EAEkC0B,kBACxCvB,GAHMH,EAEoD4B,kBAFpD5B,EAGNG,gBAAgBkD,EAHVrD,EAGUqD,uBAAwBC,EAHlCtD,EAGkCsD,eACxCC,EAJMvD,EAINuD,gBAAiBC,EAJXxD,EAIWwD,2BAEpB,OACC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAEbuC,EAAKM,IAAI,SAASC,EAASC,GACzB,GAAIA,EAAOP,GAAcO,EAAOP,EAAS,EAC1C,OACK3C,EAAAC,EAAAC,cAAA,MAAIiD,IAAKD,EAAO/C,UAAU,uBAC5BT,EAAiBM,EAAAC,EAAAC,cAAA,UAAQM,QAASoC,EAAuBQ,KAAK,KAAMH,IAAnD,oFAAwFjD,EAAAC,EAAAC,cAAA,gBACxG2C,IAAiBI,EAAQT,GAAMxC,EAAAC,EAAAC,cAAA,WAC9B+C,EAAQpC,SADsB,WACJoC,EAAQnC,MADJ,gDAExBd,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAQC,MAAOU,EAAMT,SAAUW,EAAmBV,YAAa0C,EAAQlC,OAF3D,IAEmEf,EAAAC,EAAAC,cAAA,YAC1FF,EAAAC,EAAAC,cAAA,OAAKmD,MAAO,CAACC,QAAQ,WAC7BL,EAAQpC,SADA,WACkBoC,EAAQnC,MAD1B,WACyCmC,EAAQlC,KADjD,KAGVf,EAAAC,EAAAC,cAAA,OAAKkC,IAAKa,EAAQM,WAAYC,IAAI,mDAAWtB,MAAM,QAAQC,OAAO,SAClEnC,EAAAC,EAAAC,cAAA,UAAQM,QAASsC,EAAgBM,KAAK,KAAMH,IAA5C,IAA0E,IAAjBA,EAAQQ,OAAa,yDAAc,sEAA5F,KACI/D,EAAiBM,EAAAC,EAAAC,cAAA,UAAQM,QAASuC,EAA2BK,KAAK,KAAMH,IAAvD,4DAAwFjD,EAAAC,EAAAC,cAAA,wBAzB1EO,aCDtCiD,EAAI,mEAEJC,EAAW,WACXC,EAAe,MACfC,EAAK,EAEYC,mLAEV,IAAAvE,EAEoCC,KAAKC,MAA3CsE,EAFExE,EAEFwE,mBAAoB1E,EAFlBE,EAEkBF,iBA2E3B,OACCW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,UAAQM,QA5BX,WACKqD,EAAK,GAGTE,EACAL,EACAC,EACAC,EALAC,GAAU,KA0BR,sGADA,8GAGkBA,EAHlB,iBAG4BxE,EAH5B,iEAKAW,EAAAC,EAAAC,cAAA,UAAQM,QA5CX,WACIqD,EAAKxE,GAET0E,EACCL,EACAC,EACAC,EAJAC,GAAU,IA0CuBR,MAAO,CAACC,QAAQ,WAA/C,gGACAtD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQM,QArEX,WAGAuD,EACAL,EAFAC,EAAW,WAIXC,EACAC,KA8DG,uFACA7D,EAAAC,EAAAC,cAAA,UAAQM,QA1DX,WAGCuD,EACAL,EAFAC,EAAW,QAIXC,EACAC,KAmDE,8DACA7D,EAAAC,EAAAC,cAAA,UAAQM,QAnFX,WAGCuD,EACAL,EAFAC,EAAW,SAIXC,EACAC,KA4EE,kGATA,gBAUA7D,EAAAC,EAAAC,cAAA,UAAQM,QAvBX,WAIEuD,EACAL,EACAC,EAJ6BC,EAAR,QAAjBA,EAAwC,OACvB,MAKrBC,KAeC,+QA1FqCpD,6BJApCuD,SAAM,GA2QKC,cArQf,SAAAA,EAAYxE,GAAO,IAAAyE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA3E,KAAAyE,IACnBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA3E,KAAA2E,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA/E,KAAMC,KAED+E,MAAM,CAAE3D,SAAU,GAAIC,MAAM,GAAIC,KAAK,GAAIwC,WAAW,GACzDb,KAAMwB,EAAKH,qBACXpE,cAAc,GAAIC,cAAc,GAAIF,gBAAgB,EACpDmD,eAAgB,KAAMF,SAAS,EAAIvB,YAAW,EAAMC,SAAQ,GAE5D6C,EAAKtD,qBAAuBsD,EAAKtD,qBAAqBwC,KAA1Be,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KAC5BA,EAAKlD,kBAAoBkD,EAAKlD,kBAAkBoC,KAAvBe,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KACzBA,EAAKjD,iBAAmBiD,EAAKjD,iBAAiBmC,KAAtBe,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KACxBA,EAAKhD,cAAgBgD,EAAKhD,cAAckC,KAAnBe,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KACrBA,EAAKQ,eAAeR,EAAKQ,eAAetB,KAApBe,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KACpBA,EAAKnE,SAASmE,EAAKnE,SAASqD,KAAde,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KACdA,EAAKrE,0BAA0BqE,EAAKS,yBAAyBvB,KAA9Be,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KAC/BA,EAAKpE,0BAA0BoE,EAAKpE,0BAA0BsD,KAA/Be,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KAC/BA,EAAKpB,gBAAgBoB,EAAKpB,gBAAgBM,KAArBe,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KACrBA,EAAKtB,uBAAuBsB,EAAKtB,uBAAuBQ,KAA5Be,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KAC5BA,EAAKnB,2BAA2BmB,EAAKnB,2BAA2BK,KAAhCe,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KAChCA,EAAKH,mBAAmBG,EAAKH,mBAAmBX,KAAxBe,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KACxBA,EAAK5C,kBAAkB4C,EAAK5C,kBAAkB8B,KAAvBe,OAAAM,EAAA,EAAAN,QAAAM,EAAA,EAAAN,CAAAD,KApBJA,oFA6BjB,IAEIU,EANNlB,EAIEmB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAHFlB,EAGEkB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHS,WACXjB,EAEEiB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFa,MACfhB,EACEgB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADG,EAEGG,EAAU,IAAIC,eAYpBvB,EAAI,+EACJC,EAAW,mBAAsBC,EAAe,SAAYC,EAC5DmB,EAAQE,KAAK,MAAOxB,GAAK,GACzBsB,EAAQG,mBAZR,WAC+B,IAAvBH,EAAQI,aAEO,MADFJ,EAAQvB,QAEpBmB,EAAeS,KAAKC,MAAMN,EAAQO,UAAUC,QAAQC,MACpDpG,EAAmBgG,KAAKC,MAAMN,EAAQO,UAAUC,QAAQnG,kBAChD2C,QAAQC,IAAI,6EAAmB+C,EAAQU,cAOxDV,EAAQW,OAEN,IAAK,IAAIC,EAAE,EAAGA,EAAEhB,EAAaE,OAAQc,IACrChB,EAAagB,GAAGC,UAAS,EAG7B,GAAY,IAAR7B,EAA2B,OAAfA,GAAY,EAAUY,EAChCpF,KAAKsG,SAAS,CAACpD,KAAMkC,iDAGJmB,GACnBvG,KAAKsG,SAAS,CAACjF,SAAUkF,EAAM1D,OAAOhC,kDAGtB0F,GAChBvG,KAAKsG,SAAS,CAAChF,MAAOiF,EAAM1D,OAAOhC,iDAEpB0F,GACfvG,KAAKsG,SAAS,CAAC/E,KAAMgF,EAAM1D,OAAOhC,gDAItC,IAAI2F,EAAUvE,SAASC,eAAe,YAAYC,MAAM,GACxD,GAAqB,eAAjBqE,EAAU5F,KAAqB,CACnC4B,QAAQC,IAAI,wBAAyB+D,EAAUC,aAC/CjE,QAAQC,IAAI,yBAA0B+D,EAAUE,cAC9C1G,KAAKsG,SAAS,CAAG1E,YAAY,EAAMC,SAAQ,IACvC,IAAI8E,EAAQ,CACXtF,SAAUrB,KAAKgF,MAAM3D,SACrBC,MAAOtB,KAAKgF,MAAM1D,MAClBC,KAAMvB,KAAKgF,MAAMzD,KACjBwC,WAAYyC,EACZH,UAAU,GAGjBrG,KAAKsG,SAAS,CAACjF,SAAU,GAAIC,MAAM,GAAIC,KAAK,GAAIwC,WAAW,KAC3D,IAAI6C,EAAO,IAAIC,SACfD,EAAKE,OAAO,WAAYH,EAAQtF,UAChCuF,EAAKE,OAAO,QAASH,EAAQrF,OAC7BsF,EAAKE,OAAO,OAAQH,EAAQpF,MAC5BqF,EAAKE,OAAO,QAASH,EAAQ5C,YAE7B,IAAMyB,EAAU,IAAIC,eAMpBD,EAAQE,KAAK,OAAQ,0EAA0E,GAC/FF,EAAQG,mBANR,WAC2B,IAAvBH,EAAQI,YAAuC,MAAnBJ,EAAQvB,QACxCzB,QAAQC,IAAIoD,KAAKC,MAAMN,EAAQO,YAK/BvD,QAAQC,IAAImE,GACZpB,EAAQW,KAAKS,GACb5G,KAAKuE,0BAEEvE,KAAKsG,SAAS,CAAG1E,YAAY,uCAIH,UAA3B5B,KAAKgF,MAAM7E,eAAsD,QAA3BH,KAAKgF,MAAM5E,eACrDJ,KAAKsG,SAAS,CAAGpG,gBAAgB,qDAIVqG,GACrBvG,KAAKsG,SAAS,CAAGnG,cAAeoG,EAAM1D,OAAOhC,0DAGvB0F,GACtBvG,KAAKsG,SAAS,CAAGlG,cAAemG,EAAM1D,OAAOhC,gDAIhC4C,GAEjB,IACIsD,EADAC,EAAQhH,KAAKgF,MAAM9B,KAEvB8D,EAAQC,UAAU,SAAUC,EAAWxD,EAAOyD,GACxC1D,EAAQT,KAAKkE,EAAUlE,KAAK+D,EAAerD,KAGZ,IAAjCsD,EAAQD,GAAgB9C,OAC1B+C,EAAQD,GAAgB9C,OAAO,GAE1B+C,EAAQD,GAAgB9C,OAAO,EAEtC+C,EAAQD,GAAgBV,UAAUW,EAAQD,GAAgBV,SAExDrG,KAAKsG,SAAS,CAAKpD,KAAM8D,mDAGHvD,GACxBzD,KAAKsG,SAAS,CAAKjD,eAAgBI,EAAQT,wDAGfS,GAC1B,IAAIkD,EAAQ,CACX3D,GAAKS,EAAQT,GACb3B,SAAUrB,KAAKgF,MAAM3D,SACrBC,MAAOtB,KAAKgF,MAAM1D,MAClBC,KAAMvB,KAAKgF,MAAMzD,KACjBwC,WAAY/D,KAAKgF,MAAMjB,WACvBsC,SAAU5C,EAAQ4C,SAClBpC,OAAQR,EAAQQ,QAGfC,EAAI,wDAAwDyC,EAAQ3D,GAAG,mBAC3ER,QAAQC,IAAI,OAAQyB,GAEpB,IAAIkD,EACA,UACAC,mBAAmBV,EAAQ1C,QAC3B,SACAoD,mBAAmBV,EAAQpF,MAC3B,UACA8F,mBAAmB,UACnBC,EAAUC,IAAIH,GAGdR,EAAO,IAAIC,SACbD,EAAKE,OAAO,SAAUO,mBAAmBV,EAAQ1C,SACjD2C,EAAKE,OAAO,OAAQO,mBAAmBV,EAAQpF,OAC/CqF,EAAKE,OAAO,QAASO,mBAAmB,WACxCT,EAAKE,OAAO,YAAaQ,GAEzB,IAAM9B,EAAU,IAAIC,eAKpBD,EAAQE,KAAK,OAAQxB,GAAK,GAC1BsB,EAAQG,mBALR,WAC2B,IAAvBH,EAAQI,YAAuC,MAAnBJ,EAAQvB,QACxCzB,QAAQC,IAAIoD,KAAKC,MAAMN,EAAQO,YAI/BP,EAAQW,KAAKS,GACb5G,KAAKsG,SAAS,CAACjF,SAAU,GAAIC,MAAM,GAAIC,KAAK,GAAIwC,WAAW,GAAIV,eAAgB,OAC/ErD,KAAKuE,4DAIQiD,GACZxH,KAAKsG,SAAS,CAACpD,KAAMsE,gDAItBxH,KAAKsG,SAAS,CAACzE,SAAQ,IACzBE,OAAOC,OAAS,WACd,IAAIwE,EAAUvE,SAASC,eAAe,YAAYC,MAAM,GAE7B,eAAjBqE,EAAU5F,MACpB4B,QAAQC,IAAI,wBAAyB+D,EAAUC,aAC/CjE,QAAQC,IAAI,yBAA0B+D,EAAUE,cAC9C1G,KAAKsG,SAAS,CAAG1E,YAAY,EACZmC,WAAWyC,KAE1BxG,KAAKsG,SAAS,CAAG1E,YAAY,sCAM/B,OACFpB,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAC+G,EAAD,CACIvH,eAAgBF,KAAKgF,MAAM9E,eAC3BC,cAAeH,KAAKgF,MAAM7E,cAC1BC,cAAeJ,KAAKgF,MAAM5E,cAC1BC,0BAA2BL,KAAKK,0BAChCC,0BAA2BN,KAAKM,0BAChCC,SAAUP,KAAKO,WAEnBC,EAAAC,EAAAC,cAACgH,EAAD,CACIrG,SAAUrB,KAAKgF,MAAM3D,SACrBC,MAAOtB,KAAKgF,MAAM1D,MAClBC,KAAMvB,KAAKgF,MAAMzD,KACjBwC,WAAY/D,KAAKgF,MAAMjB,WACvBnC,WAAY5B,KAAKgF,MAAMpD,WACvBC,QAAS7B,KAAKgF,MAAMnD,QAEpBH,cAAe1B,KAAK0B,cACpBN,qBAAsBpB,KAAKoB,qBAC3BI,kBAAmBxB,KAAKwB,kBACxBC,iBAAkBzB,KAAKyB,iBACvBK,kBAAmB9B,KAAK8B,oBAG5BtB,EAAAC,EAAAC,cAACiH,EAAD,CACEtG,SAAUrB,KAAKgF,MAAM3D,SACrBC,MAAOtB,KAAKgF,MAAM1D,MAClBC,KAAMvB,KAAKgF,MAAMzD,KACjBwC,WAAY/D,KAAKgF,MAAMjB,WACvBb,KAAMlD,KAAKgF,MAAM9B,KACjBG,eAAgBrD,KAAKgF,MAAM3B,eAC3BF,SAAUnD,KAAKgF,MAAM7B,SAErBjD,eAAgBF,KAAKgF,MAAM9E,eAC3BkD,uBAAwBpD,KAAKoD,uBAC7BhC,qBAAsBpB,KAAKoB,qBAC3BI,kBAAmBxB,KAAKwB,kBACxBG,kBAAmB3B,KAAK2B,kBACxBF,iBAAkBzB,KAAKyB,iBACvB6B,gBAAiBtD,KAAKsD,gBACtBC,2BAA4BvD,KAAKuD,6BAGnC/C,EAAAC,EAAAC,cAACkH,EAAD,CACA1E,KAAMlD,KAAKgF,MAAM9B,KACjBgC,eAAgBlF,KAAKkF,eACrB/B,SAAUnD,KAAKgF,MAAM7B,SACrB0E,KAAM7H,KACNuE,mBAAoBvE,KAAKuE,mBACzB1E,iBAAkBA,YAhQAoB,aKDE6G,QACW,cAA7B/F,OAAOgG,SAASC,UAEe,UAA7BjG,OAAOgG,SAASC,UAEhBjG,OAAOgG,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO3H,EAAAC,EAAAC,cAAC0H,EAAD,MAASnG,SAASC,eAAe,SD0H3C,kBAAmBmG,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4aacb9c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Login from \"./Component/Login\";\nimport CreateNewTask from \"./Component/CreateNewTask\";\nimport ViewListTask from \"./Component/ViewListTask\";\nimport FilterTask  from \"./Component/FilterTask\";\nimport md5 from \"blueimp-md5\";\nimport './App.css';\n\n//let taskList;\nlet count=0;\n//let idTask=2;\nlet total_task_count;\n\nclass App extends Component {\n\nconstructor(props) {\nsuper(props)\n\nthis.state={ username: \"\", email:\"\", text:\"\", image_path:\"\",\nlist: this.LoadTaskFromServer(),\nloginUsername:\"\", loginPassword:\"\", administration: false,\nNumberEditTask: null, viewTask:3,  imageCheck:true, preView:false}\n\nthis.userNameHandleChange = this.userNameHandleChange.bind(this);\nthis.emailNandleChange = this.emailNandleChange.bind(this);\nthis.taskHandleChange = this.taskHandleChange.bind(this);\nthis.AddTaskToList = this.AddTaskToList.bind(this);\nthis.NewStateFilter=this.NewStateFilter.bind(this);\nthis.Entrance=this.Entrance.bind(this);\nthis.loginUserNameHandleChange=this.loginUserNameHandleChang.bind(this);\nthis.loginPasswordHandleChange=this.loginPasswordHandleChange.bind(this);\nthis.AddCompleteTask=this.AddCompleteTask.bind(this);\nthis.EditAdministrationTask=this.EditAdministrationTask.bind(this);\nthis.SaveEditAdministrationTask=this.SaveEditAdministrationTask.bind(this);\nthis.LoadTaskFromServer=this.LoadTaskFromServer.bind(this);\nthis.PreViewTaskToList=this.PreViewTaskToList.bind(this);\n};\n\nLoadTaskFromServer (\n//значения сортировки по умолчанию\nurl=\"https://uxcandy.com/~shapoval/test-task-backend/?developer=Yuriy\",\nsort_field=\"username\",\nsort_direction=\"asc\",\npage=1\n) {\n  const request = new XMLHttpRequest();\n  var loadlistjson;\n\n  function req() {\n      if (request.readyState === 4) {\n        const status = request.status;\n          if (status === 200) {\n           loadlistjson = JSON.parse(request.response).message.tasks\n           total_task_count = JSON.parse(request.response).message.total_task_count\n          } else { console.log(\"Ответ сервера \" + request.statusText)}\n      }\n  }\n  url=\"https://uxcandy.com/~shapoval/test-task-backend/?developer=Yuriy\"+\"&\"+\"sort_field=\"+\n  sort_field+\"&\"+\"sort_direction=\"+sort_direction+\"&\"+\"page=\"+page ;\n  request.open(\"GET\", url, false);\n  request.onreadystatechange = req;\n  request.send();\n\n    for (let i=0; i<loadlistjson.length; i++) {\n    loadlistjson[i].complete=false\n    };\n\nif (count===0) {count=count+1; return loadlistjson}\nelse {this.setState({list: loadlistjson  })}\n  };\n\n  userNameHandleChange(event) {\n    this.setState({username: event.target.value})\n  };\n\n  emailNandleChange(event) {\n    this.setState({email: event.target.value  })\n  };\n  taskHandleChange(event) {\n    this.setState({text: event.target.value  })\n  };\n\nAddTaskToList() {\nlet imageFile=document.getElementById(\"fileLoad\").files[0];\nif (imageFile.type===\"image/jpeg\") {\nconsole.log(\"imageFile.clientWidth\", imageFile.clientWidth);\nconsole.log(\"imageFile.clientHeight\", imageFile.clientHeight)\n  this.setState({  imageCheck: true, preView:false})\n      let newTask={\n       username: this.state.username,\n       email: this.state.email,\n       text: this.state.text,\n       image_path: imageFile,\n       complete: false\n      }\n\nthis.setState({username: \"\", email:\"\", text:\"\", image_path:\"\"})\nvar form = new FormData();\nform.append(\"username\", newTask.username);\nform.append(\"email\", newTask.email);\nform.append(\"text\", newTask.text);\nform.append(\"image\", newTask.image_path );\n\nconst request = new XMLHttpRequest();\nfunction reqReadyStateChange() {\nif (request.readyState === 4 && request.status === 200)   {\nconsole.log(JSON.parse(request.response));\n}\n}\nrequest.open(\"POST\", \"https://uxcandy.com/~shapoval/test-task-backend/create?developer=Yuriy\", false);\nrequest.onreadystatechange = reqReadyStateChange;\nconsole.log(form)\nrequest.send(form);\nthis.LoadTaskFromServer ()\n}\nelse { this.setState({  imageCheck: false}) }\n  };\n\nEntrance () {\n  if (this.state.loginUsername===\"admin\" && this.state.loginPassword===\"123\") {\n  this.setState({  administration: true})\n  }\n};\n\nloginUserNameHandleChang(event) {\n    this.setState({  loginUsername: event.target.value  })\n  };\n\nloginPasswordHandleChange(event) {\n    this.setState({  loginPassword: event.target.value  })\n};\n\n\nAddCompleteTask (element) {\n// new при загрузке с сервера. Работает.\nlet newList=this.state.list\nlet indexStateList\nnewList.findIndex(function (elemarray, index, array) {\n  if (element.id===elemarray.id) {indexStateList=index}\n});\n\nif (newList[indexStateList].status===0) {\n  newList[indexStateList].status=10\n}\nelse  {newList[indexStateList].status=0}\n\nnewList[indexStateList].complete=!newList[indexStateList].complete\n\n  this.setState({    list: newList})\n};\n\nEditAdministrationTask (element) {\nthis.setState({    NumberEditTask: element.id});\n}\n\nSaveEditAdministrationTask (element) {\n  let newTask={\n   id:  element.id,\n   username: this.state.username,\n   email: this.state.email,\n   text: this.state.text,\n   image_path: this.state.image_path,\n   complete: element.complete,\n   status: element.status\n  }\n\nlet url=\"https://uxcandy.com/~shapoval/test-task-backend/edit/\"+newTask.id+\"?developer=Yuriy\";\nconsole.log(\"url=\", url)\n\nlet params_string=\n    \"status=\" +\n    encodeURIComponent(newTask.status)  +\n    \"&text=\" +\n    encodeURIComponent(newTask.text) +\n    \"&token=\" +\n    encodeURIComponent(\"beejee\");\nlet signature=md5(params_string);\n\n\nlet form = new FormData();\n  form.append(\"status\", encodeURIComponent(newTask.status));\n  form.append(\"text\", encodeURIComponent(newTask.text));\n  form.append(\"token\", encodeURIComponent(\"beejee\"));\n  form.append(\"signature\", signature);\n\n  const request = new XMLHttpRequest();\n  function reqReadyStateChange() {\n  if (request.readyState === 4 && request.status === 200)   {\n  console.log(JSON.parse(request.response));}\n}\n  request.open(\"POST\", url, false);\n  request.onreadystatechange = reqReadyStateChange;\n  request.send(form);\n  this.setState({username: \"\", email:\"\", text:\"\", image_path:\"\", NumberEditTask: null })\n  this.LoadTaskFromServer ()\n\n};\n\nNewStateFilter(listSort) {\n   this.setState({list: listSort})\n };\n\n PreViewTaskToList() {\n  this.setState({preView:true})\nwindow.onload = function() {\n  let imageFile=document.getElementById(\"fileLoad\").files[0];\n\n        if (imageFile.type===\"image/jpeg\") {\n  console.log(\"imageFile.clientWidth\", imageFile.clientWidth);\n  console.log(\"imageFile.clientHeight\", imageFile.clientHeight)\n    this.setState({  imageCheck: true,\n                     image_path:imageFile}) }\n    else {\n      this.setState({  imageCheck: false})\n      }\n    }\n }\n\n  render() {\n    return (\n  <div>\n<Login\n    administration={this.state.administration}\n    loginUsername={this.state.loginUsername}\n    loginPassword={this.state.loginPassword}\n    loginUserNameHandleChange={this.loginUserNameHandleChange}\n    loginPasswordHandleChange={this.loginPasswordHandleChange}\n    Entrance={this.Entrance} />\n\n<CreateNewTask\n    username={this.state.username}\n    email={this.state.email}\n    text={this.state.text}\n    image_path={this.state.image_path}\n    imageCheck={this.state.imageCheck}\n    preView={this.state.preView}\n\n    AddTaskToList={this.AddTaskToList}\n    userNameHandleChange={this.userNameHandleChange}\n    emailNandleChange={this.emailNandleChange}\n    taskHandleChange={this.taskHandleChange}\n    PreViewTaskToList={this.PreViewTaskToList}\n />\n\n<ViewListTask\n  username={this.state.username}\n  email={this.state.email}\n  text={this.state.text}\n  image_path={this.state.image_path}\n  list={this.state.list}\n  NumberEditTask={this.state.NumberEditTask}\n  viewTask={this.state.viewTask}\n\n  administration={this.state.administration}\n  EditAdministrationTask={this.EditAdministrationTask}\n  userNameHandleChange={this.userNameHandleChange}\n  emailNandleChange={this.emailNandleChange}\n  imageHandleChange={this.imageHandleChange}\n  taskHandleChange={this.taskHandleChange}\n  AddCompleteTask={this.AddCompleteTask}\n  SaveEditAdministrationTask={this.SaveEditAdministrationTask}\n/>\n\n<FilterTask\nlist={this.state.list}\nNewStateFilter={this.NewStateFilter}\nviewTask={this.state.viewTask}\nself={this}\nLoadTaskFromServer={this.LoadTaskFromServer}\ntotal_task_count={total_task_count}\n/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport {Component} from \"react\";\r\n\r\n\r\nexport default class Login extends Component {\r\n\r\n\trender () {\r\n\t\tconst {administration, loginUsername, loginPassword, loginUserNameHandleChange,\r\n\t\t\tloginPasswordHandleChange, Entrance}=this.props\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{administration ?  <div> Добро пожаловать, администратор. </div> :\r\n\t\t\t\t<div className=\"loginClass\">\r\n\t\t\t\t\tЛогин:    <input type=\"text\"  value={loginUsername} onChange={loginUserNameHandleChange} placeholder=\"Вася\"/>\r\n\t\t\t\t\tПароль:   <input type=\"text\"  value={loginPassword} onChange={loginPasswordHandleChange} placeholder=\"Пароль\"/>\r\n\t\t\t\t\t<button onClick={Entrance}> Войти </button>\r\n\t\t\t </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from \"react\"\r\nimport {Component} from \"react\"\r\n\r\n\r\nexport default class CreateNewTask extends Component {\r\n//image_path,\r\n\trender () {\r\n\t\tconst {userNameHandleChange, username, email, text,  emailNandleChange,\r\n\t\t\ttaskHandleChange, imageHandleChange, AddTaskToList, imageCheck, preView,\r\n\t\t\tPreViewTaskToList}=this.props\r\n\r\nvar img\r\nlet imageFile\r\nwindow.onload = function() {\r\n imageFile=document.getElementById(\"fileLoad\").files[0];\r\n\r\n  var photo_input = document.getElementById('fileLoad');\r\nlet self;\r\n\t\t\tphoto_input.onchange = function() {\r\n\t\t\t    var reader = new FileReader();\r\n\t\t\t    reader.onload = function(e) {\r\n\t\t\t       img = document.createElement('img');\r\n\t\t\t      img.onload = function() {\r\n\t\t\t\t\t self=this;\r\n\t\t\t        console.log(this.width+'x'+this.height);\r\n\t\t\t\t\t\tif (this.width>320 || this.height>240) {this.width=320; this.height=240}\r\n\t\t\t\t\t  };\r\n\t\t\t      img.src = e.target.result;\r\n\t\t\t    }\r\n\t\t\t    reader.readAsDataURL(this.files[0])\r\n\t\t\t  }\r\n\t\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t\t<p><b>Новая задача</b></p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tИмя   <input type=\"text\"  value={username} onChange={userNameHandleChange} placeholder=\"Вася\"/> <br />\r\n\t\t\t\t\t\tПочта  <input type=\"email\"  value={email} onChange={emailNandleChange}  placeholder=\"email@mail.com\" /> <br />\r\n\t\t\t\t\t\tЗадача <input type=\"text\"  value={text} onChange={taskHandleChange}  placeholder=\"Сходить в кино\"/> <br />\r\n\t\t\t\t\t\tЗагрузить иконку  <input type=\"file\"  id=\"fileLoad\" />\r\n\t\t\t\t\t\t{imageCheck ? <div> </div> :\r\n\t\t\t\t\t\t\t<div> Неверный формат файла. Выберите картинку. Допускаются image/jpeg. </div>}\r\n\t\t\t\t </div>\r\n\t\t\t</div>\r\n\r\n{preView ? <div>\r\n\t{username} &emsp; {email} &emsp; {text}\r\n\t<button onClick={AddTaskToList}> Отправить задачу </button>\r\n\t</div> :\r\n\t\t<button onClick={PreViewTaskToList}> Предварительный просмотр</button>}\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from \"react\"\r\nimport {Component} from \"react\"\r\n\r\n\r\nexport default class ViewListTask extends Component {\r\n//username, email, image_path,\r\n\trender () {\r\n\t\tconst { text,  list, viewTask,\r\n\t\t\t\t\tuserNameHandleChange, emailNandleChange,taskHandleChange, imageHandleChange,\r\n\t\t\t\t\tadministration, EditAdministrationTask, NumberEditTask,\r\n\t\t\t\t\tAddCompleteTask, SaveEditAdministrationTask}=this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"ViewListTaskClass\">\r\n\t\t\t<ul className=\"ViewListTaskClassUl\">\r\n\r\n\t\t\t{list.map(function(element, index) {\r\n      if (index<(viewTask) &&  index>(viewTask-4))  {\r\n\t\t\t  return (\r\n          <li key={index} className=\"ViewListTaskClassLi\">\r\n\t\t\t    {administration ? <button onClick={EditAdministrationTask.bind(null, element)}> Редактировать </button> : <div> </div>}\r\n\t\t\t    {(NumberEditTask===element.id) ? <div>\r\n\t\t\t      {element.username} &ensp; {element.email} &ensp;\r\n\t\t\t      Задача <input type=\"text\"  value={text} onChange={taskHandleChange}  placeholder={element.text}/> <br />\r\n\t\t\t      </div>: <div style={{display:\"inline\"}}>\r\n\t\t\t     {element.username} &ensp; {element.email} &ensp; {element.text} </div>}\r\n\r\n\t\t\t    <img src={element.image_path} alt=\"картинка\" width=\"100px\" height=\"80px\"/>\r\n\t\t\t    <button onClick={AddCompleteTask.bind(null, element)}> {(element.status===0)? \"выполнено\" : \"не выполнено\"} </button>\r\n\t\t\t      { administration ? <button onClick={SaveEditAdministrationTask.bind(null, element)}> Сохранить </button> : <div></div>}\r\n\t\t\t          </li>)}\r\n                else {\r\n                }\r\n\t\t\t        })}\r\n\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport {Component} from \"react\";\r\n\r\nlet url=\"https://uxcandy.com/~shapoval/test-task-backend/?developer=Yuriy\";\r\n//значения сортировки по умолчанию\r\nlet sort_field=\"username\";\r\nlet sort_direction=\"asc\";\r\nlet page=1;\r\n\r\nexport default class FilterTask extends Component {\r\n\r\n\trender () {\r\n\r\nconst {  LoadTaskFromServer, total_task_count}=this.props;\r\n\r\nfunction FilterStatusTaskList() {\r\n\r\n\tsort_field=\"status\";\r\n\tLoadTaskFromServer(\r\n\turl,\r\n\tsort_field,\r\n\tsort_direction,\r\n\tpage\r\n);\r\n\r\n\t};\r\n\r\nfunction FilterUserNameList() {\r\n\r\nsort_field=\"username\";\r\nLoadTaskFromServer(\r\nurl,\r\nsort_field,\r\nsort_direction,\r\npage\r\n);\r\n\r\n\t\t};\r\n\r\nfunction FilterEmailUserList(){\r\n\r\n\tsort_field=\"email\";\r\n\tLoadTaskFromServer(\r\n\turl,\r\n\tsort_field,\r\n\tsort_direction,\r\n\tpage\r\n);\r\n};\r\n\r\nfunction NextViewTask () {\r\nif (page<total_task_count) {\r\n\tpage=page+1;\r\nLoadTaskFromServer(\r\n\turl,\r\n\tsort_field,\r\n\tsort_direction,\r\n\tpage);\r\n};\r\n};\r\n\r\n\r\nfunction PreviousViewTask () {\r\n\tif (page>1) {\r\n\tpage=page-1;\r\n\r\n\tLoadTaskFromServer(\r\n\turl,\r\n\tsort_field,\r\n\tsort_direction,\r\n\tpage\r\n);\r\n};\r\n};\r\n\r\n\r\nfunction FilterAscDescTaskList () {\r\n\r\n\t\tif (sort_direction===\"asc\") {sort_direction=\"desc\"}\r\n\t\telse {sort_direction=\"asc\"};\r\n\t\tLoadTaskFromServer(\r\n\t\turl,\r\n\t\tsort_field,\r\n\t\tsort_direction,\r\n\t\tpage\r\n\t);\r\n};\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"FilterTaskClass\">\r\n\t\t <button onClick={PreviousViewTask}> приведущие задачи</button>\r\n\t\t  &#8195; &#8195;  &#8195; &#8195;  &#8195; &#8195; &#8195;\r\n\t\t\t&#8195; страница {page} из {total_task_count}\r\n      &#8195; &#8195; &#8195; &#8195; &#8195; &#8195; &#8195; &#8195; &#8195;\r\n\t\t <button onClick={NextViewTask} style={{display:\"inline\"}}> следующие задачи</button>\r\n\t\t <br />\r\n\t\t\t<button onClick={FilterUserNameList}> фильтр по имени  </button>\r\n\t\t\t<button onClick={FilterEmailUserList}> фильтр по email  </button>\r\n\t\t\t<button onClick={FilterStatusTaskList}> фильтр по статусу </button>&#8195; &#8195;\r\n\t\t\t<button onClick={FilterAscDescTaskList}> направление сортировки (по убыванию/возрастанию)</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}