{"version":3,"sources":["Component/Login.js","Component/CreateNewTask.js","Component/ViewListTask.js","Component/FilterTask.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","administration","loginUsername","loginPassword","loginUserNameHandleChange","loginPasswordHandleChange","Entrance","react_default","a","createElement","type","value","onChange","placeholder","onClick","Component","CreateNewTask","username","email","text","image_path","userNameHandleChange","emailNandleChange","taskHandleChange","imageHandleChange","AddTaskToList","ViewListTask","list","viewTask","EditAdministrationTask","NumberEditTask","AddCompleteTask","SaveEditAdministrationTask","map","element","index","console","log","key","bind","id","src","alt","width","height","complete","FilterTask","NewStateFilter","self","listSort","sort","s","t","toLowerCase","b","status","viewNumberTask","setState","App","_this","state","taskList","assertThisInitialized","loginUserNameHandleChang","event","target","newTask","newTaskAddToList","toConsumableArray","concat","newList","Login_Login","CreateNewTask_CreateNewTask","ViewListTask_ViewListTask","FilterTask_FilterTask","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b721fee6.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Component} from \"react\"\r\n\r\n\r\nexport default class Login extends Component {\r\n\tconstructor (props) {\r\n super(props)\r\n\r\n\t}\r\n\trender () {\r\n\t\tconst {administration, loginUsername, loginPassword, loginUserNameHandleChange,\r\n\t\t\tloginPasswordHandleChange, Entrance}=this.props\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{administration ?  <div> Добро пожаловать, администратор. </div> :\r\n\t\t\t\t<div>\r\n\t\t\t\t\tЛогин:    <input type=\"text\"  value={loginUsername} onChange={loginUserNameHandleChange} placeholder=\"Вася\"/>\r\n\t\t\t\t\tПароль:   <input type=\"text\"  value={loginPassword} onChange={loginPasswordHandleChange} placeholder=\"Пароль\"/>\r\n\t\t\t\t\t<button onClick={Entrance}> Войти </button>\r\n\t\t\t </div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from \"react\"\r\nimport {Component} from \"react\"\r\n\r\n\r\nexport default class CreateNewTask extends Component {\r\n\tconstructor (props) {\r\n super(props)\r\n\r\n\t}\r\n\trender () {\r\n\t\tconst {username, email, text, image_path,\r\n\t\t\tuserNameHandleChange, emailNandleChange,\r\n\t\t\ttaskHandleChange, imageHandleChange, AddTaskToList}=this.props\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t<label>\r\n\t\t\t\t\t<p><b>Новая задача</b></p>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tИмя:   <input type=\"text\"  value={username} onChange={userNameHandleChange} placeholder=\"Вася\"/> <br />\r\n\t\t\t\t\t\tПочта:  <input type=\"email\"  value={email} onChange={emailNandleChange}  placeholder=\"email@mail.com\" /> <br />\r\n\t\t\t\t\t\tЗадача: <input type=\"text\"  value={text} onChange={taskHandleChange}  placeholder=\"Сходить в кино\"/> <br />\r\n\t\t\t\t\t\tЗагрузить иконку:  <input type=\"text\" value={image_path} onChange={imageHandleChange}/>\r\n\t\t\t\t </div>\r\n\t\t\t</label>\r\n\t\t\t<button onClick={AddTaskToList}> Предварительный просмотр</button>\r\n\t\t\t<button onClick={AddTaskToList}> Отправить задачу </button> <br /> <br />\r\n\r\n\r\n\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from \"react\"\r\nimport {Component} from \"react\"\r\n\r\n\r\nexport default class ViewListTask extends Component {\r\n constructor (props) {\r\n super(props)\r\n\t}\r\n\trender () {\r\n\t\tconst {username, email, text, image_path, list, viewTask,\r\n\t\t\t\t\tuserNameHandleChange, emailNandleChange,taskHandleChange, imageHandleChange,\r\n\t\t\t\t\tadministration, EditAdministrationTask, NumberEditTask,\r\n\t\t\t\t\tAddCompleteTask, SaveEditAdministrationTask}=this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<ul>\r\n\r\n\t\t\t{list.map(function(element, index) {\r\nconsole.log(\"index\", index, \"viewTask\", viewTask )\r\n      if (index<(viewTask) &&  index>(viewTask-4))  {\r\n\t\t\t  return (\r\n          <li key={index}>\r\n\r\n\t\t\t    {administration ? <button onClick={EditAdministrationTask.bind(null, element)}> Редактировать </button> : <div> </div>}\r\n\t\t\t    {console.log(\"self.state.NumberEditTask\", NumberEditTask, \"element.id\", element.id)}\r\n\t\t\t    {(NumberEditTask==element.id) ? <div>\r\n\t\t\t      <input type=\"text\"  value={username} onChange={userNameHandleChange} placeholder={element.username}/>\r\n\t\t\t      Почта  <input type=\"email\"  value={email} onChange={emailNandleChange}  placeholder={element.email} /> <br />\r\n\t\t\t      Задача <input type=\"text\"  value={text} onChange={taskHandleChange}  placeholder={element.text}/> <br />\r\n\t\t\t      Загрузить иконку  <input type=\"text\" value={image_path} onChange={imageHandleChange}/>  </div>:\r\n\t\t\t    element.username + element.email + element.text }\r\n\t\t\t    <img src={element.image_path} alt=\"картинка\" width=\"100px\" height=\"80px\"/>\r\n\t\t\t    <button onClick={AddCompleteTask.bind(null, element)}> {(element.complete)? \"выполнено\" : \"не выполнено\"} </button>\r\n\t\t\t      { administration ? <button onClick={SaveEditAdministrationTask.bind(null, element)}> Сохранить </button> : <div></div>}\r\n\t\t\t          </li>)}\r\n                else {\r\n\r\n                }\r\n\r\n\t\t\t        })}\r\n\t\t\t</ul>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from \"react\"\r\nimport {Component} from \"react\"\r\n\r\n\r\nexport default class FilterTask extends Component {\r\nconstructor (props) {\r\n super(props)\r\n\t}\r\n\trender () {\r\nconst {list, NewStateFilter, viewTask, self}=this.props\r\n\r\nfunction FilterStatusTaskList() {\r\n\t\tlet listSort=list.sort(function(a, b) {\r\n\t\t\t\t return a.status-b.status;\r\n\t\t\t });\r\n\t\t\tNewStateFilter(listSort)\r\n\t};\r\n\r\nfunction FilterUserNameList() {\r\n\t\t\t\t let listSort=list.sort(function(s,t) {\r\n\t\t\t\t let a = s.username.toLowerCase();\r\n\t\t\t\t let b = t.username.toLowerCase();\r\n\t\t\t\t if (a < b) return -1;\r\n\t\t\t\t if (a > b) return 1;\r\n\t\t\t\t return 0;\r\n\t\t\t\t });\r\n\t\t\tNewStateFilter(listSort)\r\n\t\t}\r\n\r\nfunction FilterEmailUserList(){\r\n\t\t// сортировка по почте\r\n\t\t\tlet listSort= list.sort(function(s,t) { // Сортировка без учета регистра символов\r\n\t\t\t\t let a = s.email.toLowerCase();\r\n\t\t\t\t let b = t.email.toLowerCase();\r\n\t\t\t\t if (a < b) return -1;\r\n\t\t\t\t if (a > b) return 1;\r\n\t\t\t\t return 0;\r\n\t\t\t\t });\r\n\tNewStateFilter(listSort)\r\n\t}\r\n\r\nfunction NextViewTask () {\r\nif (viewTask) {\r\nlet viewNumberTask=viewTask+3\r\nself.setState({\r\n\tviewTask: viewNumberTask\r\n})\r\n}\r\n};\r\n\r\nfunction PreviousViewTask () {\r\nif (viewTask) {\r\nlet viewNumberTask=viewTask-3\r\nself.setState({\r\n\tviewTask: viewNumberTask\r\n})\r\n}\r\n};\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<button onClick={FilterUserNameList}> по имени пользователя </button>\r\n\t\t\t<button onClick={FilterEmailUserList}> по email пользователя </button>\r\n\t\t\t<button onClick={FilterStatusTaskList}> по статусу </button>\r\n<br /><br />\r\n\t\t\t<button onClick={PreviousViewTask}> приведущие </button>\r\n\t\t\t<button onClick={NextViewTask}> следующие </button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport Login from \"./Component/Login\"\nimport CreateNewTask from \"./Component/CreateNewTask\"\nimport ViewListTask from \"./Component/ViewListTask\"\nimport FilterTask  from \"./Component/FilterTask\"\n\nimport './App.css';\n\n\nlet idTask=2;\n\n\nclass App extends Component {\n\nconstructor(props) {\nsuper(props)\nconsole.log(this.state)\n\nthis.state={ username: \"\", email:\"\", text:\"\", image_path:\"\",\nlist: this.props.taskList.list, loginUsername:\"\", loginPassword:\"\", administration: false,\nNumberEditTask: null, viewTask:3}\n\nthis.userNameHandleChange = this.userNameHandleChange.bind(this);\nthis.emailNandleChange = this.emailNandleChange.bind(this);\nthis.taskHandleChange = this.taskHandleChange.bind(this);\nthis.imageHandleChange = this.imageHandleChange.bind(this);\nthis.AddTaskToList = this.AddTaskToList.bind(this);\nthis.NewStateFilter=this.NewStateFilter.bind(this);\nthis.Entrance=this.Entrance.bind(this);\nthis.loginUserNameHandleChange=this.loginUserNameHandleChang.bind(this);\nthis.loginPasswordHandleChange=this.loginPasswordHandleChange.bind(this);\nthis.AddCompleteTask=this.AddCompleteTask.bind(this);\nthis.EditAdministrationTask=this.EditAdministrationTask.bind(this);\nthis.SaveEditAdministrationTask=this.SaveEditAdministrationTask.bind(this);\n//this.PreviousViewTask=this.PreviousViewTask.bind(this);\n//this.NextViewTask=this.NextViewTask.bind(this);\n  }\n\n  userNameHandleChange(event) {\n    this.setState({    username: event.target.value})\n  };\n\n  emailNandleChange(event) {\n    this.setState({      email: event.target.value  })\n  };\n  taskHandleChange(event) {\n    this.setState({      text: event.target.value  })\n  };\n  imageHandleChange(event) {\n    this.setState({        image_path: event.target.value    })\n  };\n\nAddTaskToList() {\n\n      let newTask={\n       id:  idTask,\n       username: this.state.username,\n       email: this.state.email,\n       text: this.state.text,\n       image_path: this.state.image_path,\n       complete: false\n      }\nlet newTaskAddToList=[ ...this.state.list, newTask     ]\nthis.setState({username: \"\", email:\"\", text:\"\", image_path:\"\",  list: newTaskAddToList  })\n    };\n\n    Entrance () {\n  if (this.state.loginUsername===\"\" && this.state.loginPassword===\"\") {\n  this.setState({  administration: true})\n  }\n};\n\n  loginUserNameHandleChang(event) {\n    console.log(event);\n    this.setState({  loginUsername: event.target.value  })\n  };\n\n  loginPasswordHandleChange(event) {\n    this.setState({  loginPassword: event.target.value  })\n};\n\nAddCompleteTask (element) {\nlet newList=this.state.list\nnewList[element.id].complete=!newList[element.id].complete\n  this.setState({    list: newList})\n};\n\nEditAdministrationTask (element) {\n\nthis.setState({    NumberEditTask: element.id});\nconsole.log(\"this.state.NumberEditTask\", this.state.NumberEditTask)\nconsole.log(\"id\", element.id)\n}\n\nSaveEditAdministrationTask (element) {\n  let newTask={\n   id:  element.id,\n   username: this.state.username,\n   email: this.state.email,\n   text: this.state.text,\n   image_path: this.state.image_path,\n   complete: element.complete\n  }\n//let editTask=this.state.list[element.id]\n\nlet newTaskAddToList=[ ...this.state.list]\nconsole.log(\"newTaskAddToList=\", newTaskAddToList)\nnewTaskAddToList[element.id]=newTask\n\nthis.setState({username: \"\", email:\"\", text:\"\", image_path:\"\", NumberEditTask: null,\nlist: newTaskAddToList  })\n\n console.log(\"newTaskAddToList=\", newTaskAddToList)\n console.log(\"state=\", this.state)\n\n};\n\n\n\nNewStateFilter(listSort) {\nconsole.log(\"пришло\")\n   this.setState({list: listSort})\n };\n\n  render() {\n\n    const self=this\n    function PreviewListTask() {    }\n\n    return (\n\n  <div>\n<Login\n    administration={this.state.administration}\n    loginUsername={this.state.loginUsername}\n    loginPassword={this.state.loginPassword}\n    loginUserNameHandleChange={this.loginUserNameHandleChange}\n    loginPasswordHandleChange={this.loginPasswordHandleChange}\n    Entrance={this.Entrance} />\n\n<CreateNewTask\n    username={this.state.username}\n    email={this.state.email}\n    text={this.state.text}\n    image_path={this.state.image_path}\n\n    AddTaskToList={this.AddTaskToList}\n    userNameHandleChange={this.userNameHandleChange}\n    emailNandleChange={this.emailNandleChange}\n    taskHandleChange={this.taskHandleChange}\n    imageHandleChange={this.imageHandleChange} />\n\n\n<ViewListTask\n  username={this.state.username}\n  email={this.state.email}\n  text={this.state.text}\n  image_path={this.state.image_path}\n  list={this.state.list}\n  NumberEditTask={this.state.NumberEditTask}\n  viewTask={this.state.viewTask}\n\n  administration={this.state.administration}\n  EditAdministrationTask={this.EditAdministrationTask}\n  userNameHandleChange={this.userNameHandleChange}\n  emailNandleChange={this.emailNandleChange}\n  imageHandleChange={this.imageHandleChange}\n  taskHandleChange={this.taskHandleChange}\n  AddCompleteTask={this.AddCompleteTask}\n  SaveEditAdministrationTask={this.SaveEditAdministrationTask}\n/>\n\n<FilterTask\nlist={this.state.list}\nNewStateFilter={this.NewStateFilter}\nviewTask={this.state.viewTask}\nself={this}\n\n/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n\n\n\n\n\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nlet taskList={  list: [\n            {\"id\": 0,\n            \"username\": \"Test User\",\n            \"email\": \"test_user_1@example.com\",\n            \"text\": \"Hello, world!\",\n            \"status\": 10,\n            \"image_path\": \"https://uxcandy.com/~shapoval/test-task-backend/upload/user_images/5900dfd7/1508836540_1.jpg\",\n            \"complete\":false},\n           {\n          \"id\": 1,\n          \"username\": \"ATest User 2\",\n          \"email\": \"test_user_2@example.com\",\n          \"text\": \"Hello from user 2!\",\n          \"status\": 0,\n          \"image_path\": \"https://uxcandy.com/~shapoval/test-task-backend/upload/user_images/5900dfd7/1508836666_3.jpg\",\n          \"complete\":false\n          }\n                ]\n          };\n\nReactDOM.render(<App taskList={taskList}/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}